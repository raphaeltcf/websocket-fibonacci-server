version: "3.8"

services:
  websocket-server:
    build: .
    container_name: websocket-server
    networks:
      - websocket-network
    ports:
      - "8765:8765"
    depends_on:
      - websocket-mongodb
    environment:
      - MONGO_USER=admin
      - MONGO_PASSWORD=password
      - MONGO_DB=websocket_db
      - MONGO_HOST=websocket-mongodb
      - MONGO_PORT=27017
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8765
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "if netstat -an | grep 8765 > /dev/null; then exit 0; else exit 1; fi",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  websocket-mongodb:
    image: mongo:latest
    container_name: websocket-mongodb
    networks:
      - websocket-network
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=websocket_db
    volumes:
      - mongodb_data:/data/db
    command: mongod --auth
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/admin -u admin -p password --quiet
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  websocket-client:
    build: .
    container_name: websocket-client
    networks:
      - websocket-network
    depends_on:
      websocket-server:
        condition: service_healthy
    entrypoint: ["python", "/core/app/client/main.py"]

networks:
  websocket-network:
    driver: bridge

volumes:
  mongodb_data:
